#+STARTUP:showall

* running athena in parallel
  
  you can speed up your simulations by running athena in /parallel/,
  basically splitting up your simulation domain into N equal-sized
  chunks and then running each one on a separate processor.  on each
  of these chunks, the boundary conditions come from the simulation
  running on the neighboring processor.  athena uses something called
  MPI (message passing interface) to communicate information among
  processors.  i would recommend /not/ looking into the details of MPI
  unless you have to.

** configuring and compiling
   to make use of multiple processors, you first have to re-compile
   athena with MPI enabled
   
   #+BEGIN_EXAMPLE
   $ ./configure --with-gas=hydro --with-problem=... --enable-mpi
   $ make all
   #+END_EXAMPLE
   
   (you may need to install MPI before doing this... if =which mpirun=
   doesn't give you anything, try =$brew install open-mpi=)

** setting up the simulation
   next, you need to tell athena how many processors to use.  this
   happens via the NGrid_x* entries in the =athinput= file.  for
   example:

   #+BEGIN_EXAMPLE
   <domain1>
   level     =  0
   Nx1       =  8192
   x1min     = -2.5e3
   x1max     =  2.5e3
   bc_ix1    =  4
   bc_ox1    =  4
   
   
   Nx2       =  8192
   x2min     = -2.5e3
   x2max     =  2.5e3
   bc_ix2    =  4
   bc_ox2    =  4
   
   Nx3       =  1
   x3min     = -0.5
   x3max     =  0.5
   bc_ix3    =  4
   bc_ox3    =  4
   
   NGrid_x1  =  16
   NGrid_x2  =  32
   NGrid_x3  =  1
   #+END_EXAMPLE

   this runs a (1892)^2 simulation on 16*32 = 512 processors.  i've
   used this for some recent simulations on a supercomputer.  you
   won't have 512 processors on your laptops, so maybe try 
   ~NGrid_x1 = NGrid_x2 = 2~ to begin with.

** running your simulation
